{"ast":null,"code":"var _s = $RefreshSig$();\n//Commons import\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n//CSS\nimport \"./App.css\";\n\n//Componentes\nimport Cards from \"./components/Cards/Cards.jsx\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport About from \"./components/About/About\";\nimport Form from \"./components/Form/Form\";\nimport Favorites from \"./components/Favorites/Favorites\";\n\n//Rooter-Dom\nimport { Routes, Route, useLocation, useNavigate } from \"react-router-dom\";\nimport Detail from \"./components/Detail/Detail\";\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const {\n    pathname\n  } = useLocation();\n  const navigate = useNavigate();\n  const [access, setAccess] = useState(false);\n  const EMAIL = \"ejemplo@gmail.com\";\n  const PASSWORD = \"password123\";\n  useEffect(() => {\n    if (!access) navigate(\"/\");\n  }, [access, navigate]);\n  const onSearch = id => {\n    axios(`http://localhost:3001/rickandmorty/character/${id}`).then(_ref => {\n      let {\n        data\n      } = _ref;\n      if (data.name) {\n        setCharacters(oldChars => [...oldChars, data]);\n      } else {\n        window.alert(\"¡No hay personajes con este ID!\");\n      }\n    }).catch(error => {\n      window.alert(error.response.data);\n    });\n  };\n  const onClose = id => {\n    setCharacters(characters.filter(char => char.id !== Number(id)));\n  };\n  function login(userData) {\n    const {\n      email,\n      password\n    } = userData;\n    const URL = \"http://localhost:3001/rickandmorty/login/\";\n    axios(URL + `?email=${email}&password=${password}`).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      const {\n        access\n      } = data;\n      setAccess(data);\n      access && navigate(\"/home\");\n    });\n  }\n\n  // return (\n  //   <div className=\"App\">\n  //     {pathname !== \"/\" && <NavBar onSearch={onSearch} />}\n  //     <Routes>\n  //       <Route path={\"/\"} element={<Form login={login} />} />\n  //       <Route\n  //         path={\"/home\"}\n  //         element={<Cards characters={characters} onClose={onClose} />}\n  //       />\n  //       <Route path={\"/about\"} element={<About />} />\n  //       <Route path={\"/detail/:id\"} element={<Detail />} />\n  //       <Route path={\"/favorites\"} element={<Favorites />} />\n  //     </Routes>\n  //   </div>\n  // );\n}\n_s(App, \"rL5isSFIIqGVxMgI4WcRzeUB8Hw=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","Cards","NavBar","About","Form","Favorites","Routes","Route","useLocation","useNavigate","Detail","App","_s","characters","setCharacters","pathname","navigate","access","setAccess","EMAIL","PASSWORD","onSearch","id","then","_ref","data","name","oldChars","window","alert","catch","error","response","onClose","filter","char","Number","login","userData","email","password","URL","_ref2","_c","$RefreshReg$"],"sources":["C:/Users/gorz1/Documents/Henry/Bootcamp/Proyecto-Integrador/rick_and_morty/Frontend/Client/src/App.js"],"sourcesContent":["//Commons import\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n//CSS\nimport \"./App.css\";\n\n//Componentes\nimport Cards from \"./components/Cards/Cards.jsx\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport About from \"./components/About/About\";\nimport Form from \"./components/Form/Form\";\nimport Favorites from \"./components/Favorites/Favorites\";\n\n//Rooter-Dom\nimport { Routes, Route, useLocation, useNavigate } from \"react-router-dom\";\nimport Detail from \"./components/Detail/Detail\";\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n  const [access, setAccess] = useState(false);\n  const EMAIL = \"ejemplo@gmail.com\";\n  const PASSWORD = \"password123\";\n\n  useEffect(() => {\n    if (!access) navigate(\"/\");\n  }, [access, navigate]);\n\n  const onSearch = (id) => {\n    axios(`http://localhost:3001/rickandmorty/character/${id}`)\n      .then(({ data }) => {\n        if (data.name) {\n          setCharacters((oldChars) => [...oldChars, data]);\n        } else {\n          window.alert(\"¡No hay personajes con este ID!\");\n        }\n      })\n      .catch((error) => {\n        window.alert(error.response.data);\n      });\n  };\n\n  const onClose = (id) => {\n    setCharacters(characters.filter((char) => char.id !== Number(id)));\n  };\n\n  function login(userData) {\n    const { email, password } = userData;\n    const URL = \"http://localhost:3001/rickandmorty/login/\";\n    axios(URL + `?email=${email}&password=${password}`).then(({ data }) => {\n      const { access } = data;\n      setAccess(data);\n      access && navigate(\"/home\");\n    });\n  }\n\n  // return (\n  //   <div className=\"App\">\n  //     {pathname !== \"/\" && <NavBar onSearch={onSearch} />}\n  //     <Routes>\n  //       <Route path={\"/\"} element={<Form login={login} />} />\n  //       <Route\n  //         path={\"/home\"}\n  //         element={<Cards characters={characters} onClose={onClose} />}\n  //       />\n  //       <Route path={\"/about\"} element={<About />} />\n  //       <Route path={\"/detail/:id\"} element={<Detail />} />\n  //       <Route path={\"/favorites\"} element={<Favorites />} />\n  //     </Routes>\n  //   </div>\n  // );\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,WAAW;;AAElB;AACA,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,SAAS,MAAM,kCAAkC;;AAExD;AACA,SAASC,MAAM,EAAEC,KAAK,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC1E,OAAOC,MAAM,MAAM,4BAA4B;AAE/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM;IAAEiB;EAAS,CAAC,GAAGP,WAAW,CAAC,CAAC;EAClC,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMqB,KAAK,GAAG,mBAAmB;EACjC,MAAMC,QAAQ,GAAG,aAAa;EAE9BrB,SAAS,CAAC,MAAM;IACd,IAAI,CAACkB,MAAM,EAAED,QAAQ,CAAC,GAAG,CAAC;EAC5B,CAAC,EAAE,CAACC,MAAM,EAAED,QAAQ,CAAC,CAAC;EAEtB,MAAMK,QAAQ,GAAIC,EAAE,IAAK;IACvBtB,KAAK,CAAE,gDAA+CsB,EAAG,EAAC,CAAC,CACxDC,IAAI,CAACC,IAAA,IAAc;MAAA,IAAb;QAAEC;MAAK,CAAC,GAAAD,IAAA;MACb,IAAIC,IAAI,CAACC,IAAI,EAAE;QACbZ,aAAa,CAAEa,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEF,IAAI,CAAC,CAAC;MAClD,CAAC,MAAM;QACLG,MAAM,CAACC,KAAK,CAAC,iCAAiC,CAAC;MACjD;IACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBH,MAAM,CAACC,KAAK,CAACE,KAAK,CAACC,QAAQ,CAACP,IAAI,CAAC;IACnC,CAAC,CAAC;EACN,CAAC;EAED,MAAMQ,OAAO,GAAIX,EAAE,IAAK;IACtBR,aAAa,CAACD,UAAU,CAACqB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACb,EAAE,KAAKc,MAAM,CAACd,EAAE,CAAC,CAAC,CAAC;EACpE,CAAC;EAED,SAASe,KAAKA,CAACC,QAAQ,EAAE;IACvB,MAAM;MAAEC,KAAK;MAAEC;IAAS,CAAC,GAAGF,QAAQ;IACpC,MAAMG,GAAG,GAAG,2CAA2C;IACvDzC,KAAK,CAACyC,GAAG,GAAI,UAASF,KAAM,aAAYC,QAAS,EAAC,CAAC,CAACjB,IAAI,CAACmB,KAAA,IAAc;MAAA,IAAb;QAAEjB;MAAK,CAAC,GAAAiB,KAAA;MAChE,MAAM;QAAEzB;MAAO,CAAC,GAAGQ,IAAI;MACvBP,SAAS,CAACO,IAAI,CAAC;MACfR,MAAM,IAAID,QAAQ,CAAC,OAAO,CAAC;IAC7B,CAAC,CAAC;EACJ;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;AAACJ,EAAA,CAvDQD,GAAG;EAAA,QAEWH,WAAW,EACfC,WAAW;AAAA;AAAAkC,EAAA,GAHrBhC,GAAG;AAyDZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}